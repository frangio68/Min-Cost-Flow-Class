##############################################################################
############################## makefile-lib ##################################
##############################################################################
#                                                                            #
#   makefile of libMCFCl - frontend for building the library                 #
#                                                                            #
#   Input:  optional: $(libMCFClDIR) = the directory where the MCFClass      #
#                     source is. If the macro is not provided ".." is used,  #
#                     since it is assumed that the "make -f makefile-lib"    #
#                     command is issued in the lib/ folder.                  #
#                                                                            #
#           optional: $(CC) = the C++ compiler command. If the macro is      #
#                     not provided, it is defined locally.                   #
#                                                                            #
#           optional: $(SW) = the compiler options (optimization, debug,     #
#                     required C++ standard, ...). If the macro is not       #
#                     provided, it is defined locally.                       #
#                                                                            #
#   Output: none, just the library being built                               #
#                                                                            #
#                              Antonio Frangioni                             #
#                          Dipartimento di Informatica                       #
#                              Universita' di Pisa                           #
#                                                                            #
##############################################################################

ifndef libMCFClDIR
libMCFClDIR = ..
endif

ifndef CC
# compiler
CC = clang++
endif

ifndef SW
# debug compiler options
#SW = -g3 -glldb -fno-inline -std=c++14 -ferror-limit=1
# production compiler options
SW = -O3 -DNDEBUG -std=c++14
endif

# module name
NAME = $(libMCFClDIR)/lib/libMCFCl.a

# compiler
CC = clang++

# default target- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

default: $(NAME)

# build = default - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

build: $(NAME)

# clean - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

clean::
	rm -f $(NAME)

# install - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

install:
	mv $(NAME) $(libMCFClDIR)/../lib
	cp $(libMCFClH) $(libMCFClDIR)/../include

# define & include the necessary modules- - - - - - - - - - - - - - - - - - -
# if a module is not used in the current configuration, just comment out the
# corresponding include line
# each module outputs some macros to be used here:
# *OBJ is the final object(s) / library
# *LIB is the external libraries + -L< libdirs >
# *H   is the list of all include files
# *INC is the -I< include directories >

# libMCFCl (complete with external libraries)
include $(libMCFClDIR)/lib/makefile-c

# archive the library - - - - - - - - - - - - - - - - - - - - - - - - - - - -

$(NAME): $(libMCFClOBJ)
	ar -ruv $(NAME) $(libMCFClOBJ)

########################## End of makefile-lib ###############################
